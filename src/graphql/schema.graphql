type Address {
  county: String!
  state: String!
}

interface Node {
  id: ID!
}

type Company implements Node {
  id: ID!
  address: Address!
  logo: String!
  name: String!
  purpose: String!
  url: String!
}

interface Displayed {
  title: String!
}

type Use implements Displayed & Node {
  id: ID!
  title: String!
}

type Language implements Displayed & Node {
  id: ID!
  title: String!
  url: String!
  logo: String!
}

type Tool implements Displayed & Node {
  id: ID!
  languages: [Language!]
  logo: String!
  title: String!
  url: String!
  use: Use!
}

type History implements Node {
  id: ID!
  children: [History!]
  utilization: Int
  title: String!
  values: [Displayed!]!
}

type Experience implements Node {
  id: ID!
  accomplishments: [String!]!
  company: Company!
  days: Int!
  endDate: String
  hidden: Boolean!
  histories: [History!]!
  jobType: String!
  index: Int!
  role: String!
  startDate: String!
}

type Skill implements Node {
  id: ID!
  experience: Experience!
  languages: [Language!]
  title: String!
  utilization: Int!
  value: Displayed!
  values: [Displayed!]!
}

union DisplayedNode = Tool | Language | Use

type Query {
  experiences: [Experience!]!
  experience(id: ID!): Experience
  skills: [Skill!]!
  skill(id: ID!): Skill
}
